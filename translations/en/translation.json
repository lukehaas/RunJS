{
  "main": {
    "checkForUpdates": "Check for Updatesâ€¦",
    "restartToUpdate": "Restart to Update",
    "documentation": "Documentation",
    "reportIssue": "Report Issue",
    "copyDebugLog": "Copy Debug Log to Clipboard",
    "file": "File",
    "edit": "Edit",
    "undo": "Undo",
    "redo": "Redo",
    "cut": "Cut",
    "copy": "Copy",
    "paste": "Paste",
    "delete": "Delete",
    "selectAll": "Select All",
    "inspect": "Inspect",
    "find": "Find",
    "replace": "Replace",
    "toggleLineComment": "Toggle Line Comment",
    "toggleBlockComment": "Toggle Block Comment",
    "toggleMagicComment": "Toggle Magic Comment",
    "action": "Action",
    "setWorkingDirectory": "Set Working Directoryâ€¦",
    "formatCode": "Format Code",
    "tools": "Tools",
    "manageNpmPackages": "NPM Packagesâ€¦",
    "manageEnvironmentVariables": "Environment Variablesâ€¦",
    "manageSnippets": "Snippetsâ€¦",
    "insertSnippet": "Insert Snippet",
    "insertSnippetNewTab": "Insert Snippet in New Tab",
    "importSnippets": "Import Snippetsâ€¦",
    "exportSnippets": "Export Snippetsâ€¦",
    "confirm": "Confirm",
    "confirmDeleteSnippet": "Are you sure you want to delete this snippet?",
    "errorExporting": "Failed to export snippets.",
    "errorImporting": "Failed to import snippets.",
    "errorImportingFormat": "Invalid snipprt format.",
    "view": "View",
    "actualSize": "Actual Size",
    "increaseFontSize": "Increase Font Size",
    "decreaseFontSize": "Decrease Font Size",
    "toggleFullScreen": "Full Screen",
    "toggleOutput": "Output",
    "toggleSideBar": "Side Bar",
    "toggleActivityBar": "Activity Bar",
    "layout": "Layout",
    "horizontal": "Horizontal",
    "vertical": "Vertical",
    "themes": "Themes",
    "window": "Window",
    "editTabTitle": "Edit Tab Titleâ€¦",
    "tabTitle": "Tab Title",
    "minimize": "Minimize",
    "bringAllToFront": "Bring All to Front",
    "aboutRunJs": "About RunJS",
    "preferences": "Settingsâ€¦",
    "services": "Services",
    "hideRunJs": "Hide RunJS",
    "hideOthers": "Hide Others",
    "showAll": "Show All",
    "activate": "Activateâ€¦",
    "manageLicense": "Manage Licenseâ€¦",
    "quitRunJs": "Quit RunJS",
    "help": "Help",
    "exit": "Exit",
    "clear": "Clear",
    "open": "Openâ€¦",
    "save": "Save",
    "saveAs": "Save Asâ€¦",
    "loadError": "Load Error",
    "errorLoadingFile": "There was an error loading the file.",
    "errorFileTooLarge": "This file is too large to open with RunJS.",
    "saveErrorTitle": "Save Error",
    "saveErrorContent": "There was an error saving the file",
    "pasteErrorTitle": "Paste Error",
    "pasteErrorContent": "Data is too large for RunJS to handle.",
    "closeTab": "Close Tab",
    "closeOtherTabs": "Close Other Tabs",
    "closeTabsRight": "Close Tabs to the Right",
    "errorInvalidLicense": "Error: Activation failed due to invalid license key.",
    "errorLicenseNotFound": "Error: Failed to find license information. Please try again later.",
    "errorTwoMachinesActive": "Error: Activation limit has been reached. You can deactivate devices online at\nrunjs.app/license-manager",
    "errorDeactivationFailed": "Error: Deactivation failed. Please contact mail@runjs.app for assistance.",
    "errorConnectionProblem": "Error: There was a problem connecting to the server.",
    "errorFirewall": "Error: Request was blocked. Please whitelist license.haaslabs.app",
    "errorOccured": "An error occured: {{message}}",
    "noUpdates": "No Updates",
    "currentUpToDate": "Current version is up-to-date.",
    "foundUpdates": "Found Updates",
    "updateNow": "Found updates, do you want update now?",
    "newVersionAvailable": "A new version of RunJS is available.",
    "downloadFrom": "RunJS can be downloaded from the official website or you can use your preferred package manager.",
    "download": "Download",
    "yes": "Yes",
    "no": "No",
    "installUpdates": "Install Updates",
    "updatesDownloaded": "Updates downloaded, application will be quit for update...",
    "error": "Error",
    "version": "Version {{number}}",
    "copyright": "Created by Luke Haas\nCopyright Â© 2025 Haas Labs Ltd",
    "kill": "Kill",
    "confirmCloseTab": "Are you sure you want to close this tab?",
    "createSnippet": "Create Snippetâ€¦",
    "publishGist": "Publish to Gistâ€¦",
    "saveChanges": "Do you want to save your changes?",
    "lostChanges": "Your changes will be lost if you don't save them.",
    "noSave": "Don't Save",
    "downgrade": "Downgrade",
    "downloadVersion": "Download Version {{name}}",
    "afterUpdatePeriod": "This version of RunJS was released after your update period ended.",
    "renewOrDowngrade": "Please renew your license or revert to version {{name}}.",
    "updateReady": "A new update is ready to install",
    "updateReadyDetail": "RunJS version {version} has been downloaded and is ready to be installed",
    "thankForUsing": "Thank you for using RunJS",
    "considerPurchasing": "If you find RunJS helpful, please consider supporting its continued development by purchasing a license.",
    "maybeLater": "Maybe Later",
    "export": "Export",
    "exportMenuItem": "Exportâ€¦",
    "killTab": "Kill tab",
    "wait": "Wait",
    "tabUnresponsive": "Tab Unresponsive",
    "curentTabUnresponsive": "The current tab has become unresponsive.",
    "welcome": "/*ðŸ‘‹ Welcome to RunJS ðŸš€\n*\n* To get started, try writing some code\n*\n* For each expression you write, you'll see the result on the right ðŸ‘‰\n*/\n'Hello, World! ðŸŒŽ';\n\nMath.pow(5, 5);\n\nawait Promise.resolve('Top-level await ðŸ¤©');\n\n[1, 2, 3, 4].map(num => num * 2);\n\n// Expressions are logged without needing console.log() ðŸ¤¯\n\n/*\n* Activate RunJS to remove limits and access more features, including:\n* - installing NPM packages\n* - opening multiple tabs\n* - creating snippets\n* - using Magic Comments // ?\n* - and supporting the continued development of RunJS\n*\n* Happy Coding! ðŸŽ‰\n*/"
  },
  "common": {
    "run": "Run",
    "stop": "Stop",
    "whatsNew": "What's New",
    "newTab": "New Tab",
    "reopenTab": "Re-open Closed Tab",
    "close": "Close",
    "ok": "OK",
    "cancel": "Cancel",
    "buyLicense": "Buy License",
    "activate": "Activate",
    "premiumFeatureList": "Premium Feature List",
    "preferences": "Settings",
    "webView": "Web View",
    "editors": "Editors",
    "editorBar": "Editor Bar",
    "renew": "Renew License",
    "remindMe": "Remind Me Later",
    "aiChat": "AI Chat",
    "explainOutput": "Explain Output",
    "explainThis": "Explain This",
    "snippets": "Snippets",
    "npmPackages": "NPM Packages",
    "newChat": "New Chat",
    "aiGreeting": "<p>Hi, how can I help you?</p>",
    "openAiNoApiKey": "<p>To use this feature, please enter your OpenAI API key in the <a href='#runjs-settings'>settings</a>.</p><p>To find out how to get an OpenAI API key, please refer to the OpenAI documentation: <a href='https://platform.openai.com/docs/quickstart'>https://platform.openai.com/docs/quickstart</a></p>",
    "geminiNoApiKey": "<p>To use this feature, please enter your Gemini API key in the <a href='#runjs-settings'>settings</a>.</p><p>To find out how to get a Gemini API key, please refer to the Gemini documentation: <a href='https://ai.google.dev/gemini-api/docs/api-key'>https://ai.google.dev/gemini-api/docs/api-key</a></p>",
    "mistralNoApiKey": "<p>To use this feature, please enter your Mistral AI API key in the <a href='#runjs-settings'>settings</a>.</p><p>To find out how to get an Mistral AI API key, please refer to the Mistral AI documentation: <a href='https://docs.mistral.ai/getting-started/quickstart/'>https://docs.mistral.ai/getting-started/quickstart/</a></p>",
    "anthropicNoApiKey": "<p>To use this feature, please enter your Anthropic API key in the <a href='#runjs-settings'>settings</a>.</p><p>To find out how to get an Anthropic API key, please refer to the Anthropic documentation: <a href='https://docs.claude.com/en/api/overview'>https://docs.claude.com/en/api/overview</a></p>",
    "send": "Send (Enter)",
    "enterPrompt": "Enter a prompt here"
  },
  "editor": {
    "toggleAudio": "Toggle audio",
    "updateAvailable": "Update available",
    "doMore": "Do more with RunJS",
    "unlimitedRuns": "Unlimited Runs",
    "runWithoutLimits": "Run your code without limits",
    "activatePremiumFeatures": "Activate RunJS and get full access to all features",
    "multipleTabs": "Multiple Tabs",
    "magicComments": "Magic Comments",
    "npmPackages": "NPM Packages",
    "autocomplete": "Autocomplete",
    "typeChecking": "Type Checking",
    "extraThemes": "Extra Themes",
    "intlDateTime": "{{val, datetime}}",
    "removeLimits": "Activate RunJS to remove limits",
    "snippets": "Snippets",
    "timeToRenew": "Time to Renew",
    "pleaseRenew": "It's time to renew - Please renew your license to keep receiving updates.",
    "npmPackagesDetail": "Experiment with new libraries and frameworks",
    "multipleTabsDetail": "Essential for multi-tasking",
    "autocompleteDetail": "See code suggestions while you type",
    "snippetsDetail": "Create your own snippet collection",
    "typeCheckingDetail": "See type related errors and warnings",
    "extraThemesDetail": "Ayu, One Dark, Shades of Purple, SynthWave '84",
    "magicCommentsDetail": "See the value of any expression anywhere in your code",
    "doNotRemind": "Don't remind me again",
    "hoverInfo": "Hover Information",
    "hoverInfoDetail": "See information, including documentation, when hovering over code",
    "activateForMagicComments": "Activate RunJS to enable Magic Comments"
  },
  "preferences": {
    "ai": "AI",
    "preferences": "Settings",
    "general": "General",
    "transpilation": "Transpilation",
    "build": "Build",
    "formatting": "Formatting",
    "appearance": "Appearance",
    "advanced": "Advanced",
    "presets": "Presets",
    "plugins": "Plugins",
    "enableTranspilation": "Enable transpilation with Babel",
    "autoFormat": "Auto-Format",
    "autoFormatDescription": "Automatically format code on run",
    "formattingRules": "Formatting rules",
    "autoRun": "Auto-Run",
    "autoRunDescription": "Automatically run code on change",
    "lineNumbers": "Line Numbers",
    "lineNumbersDescription": "Show line numbers",
    "lineWrap": "Line Wrap",
    "lineWrapDescription": "Wrap long lines",
    "vimKeys": "Vim Keys",
    "vimKeysDescription": "Use Vim key-bindings",
    "closeBrackets": "Close Brackets",
    "closeBracketsDescription": "Auto-close brackets",
    "matchLines": "Match Lines",
    "matchLinesDescription": "Align output results with source",
    "matchLinesHint": "Output results will be placed on the same line as their source. Disable this to show output results in their natural order of execution.",
    "autocomplete": "Autocomplete",
    "autocompleteDescription": "Show suggestions while typing",
    "typeChecking": "Linting",
    "typeCheckingDescription": "Show inline errors and warnings",
    "signatures": "Signatures",
    "signaturesDescription": "Show function signatures while typing",
    "hoverInfo": "Hover Info",
    "hoverInfoDescription": "Show information on hover",
    "theme": "Theme",
    "font": "Font",
    "fontSize": "Font Size",
    "invisibles": "Invisibles",
    "invisiblesDescription": "Show invisible characters",
    "activeLine": "Active Line",
    "activeLinesDescription": "Highlight active line",
    "tabBar": "Tab Bar",
    "tabBarDescription": "Show tab bar for single tab",
    "runtimeValues": "Expression Results",
    "runtimeValuesDescription": "Show the result of each top-level expression",
    "outputHighlighting": "Output Highlighting",
    "outputHighlightingDescription": "Show syntax highlighting on output",
    "showUndefined": "Show Undefined",
    "showUndefinedDescription": "Show undefined values",
    "loopProtection": "Loop Protection",
    "loopProtectionDescription": "Protect against long running loops",
    "premium": "Premium",
    "scrolling": "Scrolling",
    "standard": "Standard",
    "synchronous": "Synchronous",
    "automatic": "Automatic",
    "confirmClose": "Confirm Close",
    "confirmCloseDescription": "Ask before closing tab",
    "printWidth": "Print Width",
    "tabWidth": "Tab Width",
    "useTabs": "Use Tabs",
    "useTabsDescription": "Indent lines with tabs instead of spaces",
    "semicolons": "Semicolons",
    "semicolonsDescription": "Print semicolons at the ends of statements",
    "singleQuotes": "Single Quotes",
    "singleQuotesDescription": "Use single quotes instead of double quotes",
    "quoteProps": "Quote Props",
    "jsxQuotes": "JSX Quotes",
    "jsxQuotesDescription": "Use single quotes instead of double quotes in JSX",
    "trailingCommas": "Trailing Commas",
    "bracketSpacing": "Bracket Spacing",
    "bracketSpacingDescription": "Print spaces between brackets in object literals",
    "arrowFunctionParens": "Arrow Function Parentheses",
    "sideBar": "Side Bar",
    "sideBarDescription": "Show side bar",
    "activityBar": "Activity Bar",
    "activityBarDescription": "Show activity bar",
    "language": "Language",
    "english": "English",
    "spanish": "EspaÃ±ol",
    "japanese": "æ—¥æœ¬èªž",
    "chinese": "ä¸­æ–‡",
    "changeAfterRestart": "Changes will be applied after restarting the app.",
    "transform": "Transform",
    "proposals": "TC39 Proposals",
    "topLevelAwait": "Top-level await",
    "topLevelAwaitDescription": "Enable top-level await",
    "topLevelAwaitHint": "Top-level await is not compatible with expression results.",
    "aiModel": "Model",
    "aiApiKey": "API Key",
    "aiProvider": "Provider",
    "aiBaseUrl": "Base URL",
    "refreshModels": "Refresh models",
    "selectModel": "Select modelâ€¦",
    "npmrcHint": ".npmrc stores settings that control how NPM operates when managing packages and dependencies.",
    "npmrcFailedToRead": "Failed to read .npmrc file. Please check permissions.",
    "npmrcTooLarge": "The .npmrc file is too large. Please reduce its size.",
    "npmrcFailedToSave": "Failed to save .npmrc file. Please check permissions.",
    "ligatures": "Font Ligatures",
    "ligaturesDescription": "Enable ligatures for supported fonts",
    "save": "Save",
    "reset": "Reset"
  },
  "license": {
    "deactivateLicense": "Deactivate License",
    "activation": "RunJS Activation",
    "yourLicense": "Your RunJS License",
    "deactivateYourLicense": "Here you can deactivate your RunJS license if you want to use it on a different computer.",
    "activateYourLicense": "Your copy of RunJS is not activated yet. Please enter your license key below.",
    "licenseKey": "License Key",
    "licenseHint": "You should find your license key in the confirmation email you received after purchasing RunJS.",
    "thanksForSupport": "Thank you for supporting RunJS.",
    "activationComplete": "Activation Complete"
  },
  "vars": {
    "manageEnvironmentVariables": "Environment Variables",
    "key": "KEY",
    "value": "VALUE",
    "add": "Add",
    "save": "Save",
    "remove": "Remove",
    "noVars": "No environment variables yet.\nUse the form above to add environment variables.",
    "hint": "Environment variables are loaded into process.env and accessed by suffixing the key of the environment variable."
  },
  "installer": {
    "managePackages": "NPM Packages",
    "initError": "An error occured that prevented NPM from initializing.",
    "name": "Name",
    "version": "Version",
    "add": "Add",
    "remove": "Remove",
    "search": "Search",
    "searchError": "An error occured while searching for {{name}}",
    "installError": "An error occured while installing {{name}}",
    "removeError": "An error occured while removing package",
    "latest": "Latest",
    "installed": "Installed"
  },
  "snippets": {
    "manageSnippets": "Snippets",
    "name": "Name",
    "description": "Description",
    "search": "Search",
    "notFound": "No matching snippet found.",
    "nameHint": "Defines the trigger word for autocomplete.",
    "noSnippets": "No snippets yet.\nGet started by creating a new snippet or importing an existing snippet library.",
    "insertSnippet": "Insert Snippet",
    "insertSnippetNewTab": "Insert Snippet in New Tab",
    "copySnippet": "Copy Snippet",
    "copied": "Copied!",
    "inserted": "Inserted!",
    "insertedNewTab": "Inserted in New Tab!",
    "newSnippet": "New Snippet"
  }
}
